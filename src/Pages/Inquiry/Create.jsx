import {
  Button,
  Flex,
  FormControl,
  FormLabel,
  Grid,
  Input,
  Stack,
  Text,
  Textarea,
  useToast,
} from "@chakra-ui/react";
import React, { useEffect, useState } from "react";
import Layout from "../../Components/Layout";
import { useDispatch } from "react-redux";
import { create_inquiry, get_inquiry } from "../../Redux/inquiry/action";
import useHandler from "../../hooks/useHandler";
import { Link } from "react-router-dom";

export const CreateInquiry = ({ onClose }) => {
  const dispatch = useDispatch();
  const toast = useToast();
  const { handleRes, handleError } = useHandler();

  const [inquiryForm, setInquiryForm] = useState({
    serial_no: "",
    date: "",
    inquiry_no: "",
    client_name: "",
    client_details: "",
    payment_terms: "",
    validity_of_inquiry: "",
    delivery_time: "",
    inquiry_date: "",
    item_id: "",
    product: "",
    item_description: "",
    hsn_code: "",
    quantity: "",
    unit: "",
    unit_price: "",
    discount: "",
    tax: "",
    total_price: "",
    total_price_with_tax: "",
    comments: "",
  });

  useEffect(() => {
    const autoGeneratedValues = {
      serial_no: "001",
      date: new Date().toISOString().split("T")[0],
      inquiry_no: "INQ001",
      client_details: "Auto-generated client details",
      inquiry_date: new Date().toISOString().split("T")[0],
      item_id: "ITEM001",
      hsn_code: "HSN001",
      unit: "10",
      total_price: "1000",
      total_price_with_tax: "1100",
    };

    setInquiryForm((prevForm) => ({
      ...prevForm,
      ...autoGeneratedValues,
    }));
  }, []);

  const handleInputChange = (e) => {
    const { id, value } = e.target;
    setInquiryForm({ ...inquiryForm, [id]: value });
  };

  const handleFormSubmit = (e) => {
    e.preventDefault();
    try {
      dispatch(create_inquiry(inquiryForm));
      toast({
        title: "Inquiry created.",
        description: "Your inquiry has been created successfully.",
        status: "success",
        duration: 9000,
        isClosable: true,
      });
      onClose();
    } catch (error) {
      toast({
        title: "Error creating inquiry.",
        description: error.message,
        status: "error",
        duration: 9000,
        isClosable: true,
      });
    }
  };

  // const handleForm = (event) => {
  //   event.preventDefault();
  //   const form = event.target;
  //   const company_name = form.querySelector("#name").value;
  //   const address = form.querySelector("#address").value;
  //   const contact_no = form.querySelector("#contact_no").value;
  //   const inquiry_of_products = form.querySelector(
  //     "#inquiry_of_products"
  //   ).value;
  //   const quality = form.querySelector("#quality").value;
  //   const medium_of_inquiry = form.querySelector("#medium_of_inquiry").value;
  //   const assign_to = form.querySelector("#assign_to").value;
  //   const status = form.querySelector("#status").value;

  //   let empty = "";

  //   switch (empty) {
  //     case company_name:
  //       empty = "Company Name";
  //       break;

  //     case address:
  //       empty = "Address";
  //       break;

  //     case contact_no:
  //       empty = "Contact Number";
  //       break;

  //     case inquiry_of_products:
  //       empty = "Inquiry of proudcts";
  //       break;

  //     case quality:
  //       empty = "Quality";
  //       break;
  //     case medium_of_inquiry:
  //       empty = "Medium of Inquiry";
  //       break;
  //     case assign_to:
  //       empty = "Employee Id";
  //       break;

  //     case status:
  //       empty = "status";
  //       break;

  //     default:
  //       break;
  //   }

  //   if (empty != "") {
  //     toast({
  //       title: empty + " cannot be empty!",
  //       status: "error",
  //       duration: 3000,
  //       isClosable: true,
  //       position: "top",
  //     });

  //     return;
  //   }
  //   const data = {
  //     customer_name: company_name,
  //     address,
  //     contact_no,
  //     inquiry_of_products,
  //     quality,
  //     medium_of_inquiry,
  //     assign_to,
  //     status,
  //   };
  //   dispatch(create_inquiry(data, handleRes, handleError)).then(() => {
  //     onClose();
  //   });
  // };
  return (
    // <Layout>
    <Stack alignItems={"center"} justifyContent={"center"}>
      <Text as={"h2"} fontSize={"xl"} fontWeight={"bold"}>
        Inquiry Create
      </Text>
      <Stack gap={4} mt={12}>
        <form onSubmit={handleFormSubmit}>
          <Grid gridTemplateColumns={"repeat(4,1fr)"} gap={4}>
            <FormControl>
              <FormLabel>Sr. No.</FormLabel>
              <Input
                type="text"
                placeholder="Sr. No."
                id="srNo"
                value={inquiryForm.serial_no}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>Date</FormLabel>
              <Input
                type="date"
                placeholder="Date"
                id="date"
                value={inquiryForm.date}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>Inquiry No.</FormLabel>
              <Input
                type="text"
                placeholder="Inquiry No."
                id="inquiry_no"
                value={inquiryForm.inquiry_no}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl isRequired>
              <FormLabel>Client Name</FormLabel>
              <Input
                type="text"
                placeholder="Client Name"
                id="client_name"
                value={inquiryForm.client_name}
                onChange={handleInputChange}
                isRequired
              />
            </FormControl>
            <FormControl>
              <FormLabel>Client Details</FormLabel>
              <Input
                type="text"
                placeholder="Client Details"
                id="client_details"
                value={inquiryForm.client_details}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl isRequired>
              <FormLabel>Payment Terms</FormLabel>
              <Input
                type="text"
                placeholder="Enter Payment Terms"
                id="payment_terms"
                value={inquiryForm.payment_terms}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl isRequired>
              <FormLabel>Validity of Inquiry</FormLabel>
              <Input
                type="text"
                placeholder="Validity of Inquiry"
                id="validity_of_inquiry"
                value={inquiryForm.validity_of_inquiry}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl isRequired>
              <FormLabel>Delivery Time</FormLabel>
              <Input
                type="text"
                placeholder="Delivery Time"
                id="delivery_time"
                value={inquiryForm.delivery_time}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>Inquiry Date</FormLabel>
              <Input
                type="date"
                placeholder="Inquiry Date"
                id="inquiry_date"
                value={inquiryForm.inquiry_date}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>Item Id</FormLabel>
              <Input
                type="text"
                placeholder="Item Id"
                id="item_id"
                value={inquiryForm.item_id}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl isRequired>
              <FormLabel>Product</FormLabel>
              <Input
                type="text"
                placeholder="Product"
                id="product"
                value={inquiryForm.product}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl isRequired>
              <FormLabel>Item Description</FormLabel>
              <Input
                type="text"
                placeholder="Item Description"
                id="item_description"
                value={inquiryForm.item_description}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>HSN Code</FormLabel>
              <Input
                type="text"
                placeholder="HSN Code"
                id="hsn_code"
                value={inquiryForm.hsn_code}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl isRequired>
              <FormLabel>Quantity</FormLabel>
              <Input
                type="number"
                placeholder="Quantity"
                id="quantity"
                value={inquiryForm.quantity}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>Unit</FormLabel>
              <Input
                type="text"
                placeholder="Unit"
                id="unit"
                value={inquiryForm.unit}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl isRequired>
              <FormLabel>Unit Price</FormLabel>
              <Input
                type="number"
                placeholder="Unit Price"
                id="unit_price"
                value={inquiryForm.unit_price}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>Discount</FormLabel>
              <Input
                type="number"
                placeholder="Discount"
                id="discount"
                value={inquiryForm.discount}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl isRequired>
              <FormLabel>Tax</FormLabel>
              <Input
                type="number"
                placeholder="Tax"
                id="tax"
                value={inquiryForm.tax}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>Total Price</FormLabel>
              <Input
                type="number"
                placeholder="Total Price"
                id="total_price"
                value={inquiryForm.total_price}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>Total Price with Tax</FormLabel>
              <Input
                type="number"
                placeholder="Total Price with Tax"
                id="total_price_with_tax"
                value={inquiryForm.total_price_with_tax}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl>
              <FormLabel>Comments</FormLabel>
              <Textarea
                placeholder="Enter your comments"
                id="comments"
                value={inquiryForm.comments}
                onChange={handleInputChange}
              />
            </FormControl>
            <Flex gap={2}>
              <Button
                as={Link}
                to="/inquiry"
                w={"fit-content"}
                variant={"outline"}
                onClick={() => onClose()}
              >
                Cancel
              </Button>
              <Button
                type="submit"
                bg={"#319AF6"}
                color={"white"}
                w={"fit-content"}
              >
                Submit
              </Button>
            </Flex>
          </Grid>
        </form>
      </Stack>
    </Stack>
    // </Layout>
  );
};
